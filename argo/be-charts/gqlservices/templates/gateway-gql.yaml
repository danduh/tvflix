apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway-gql
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: gateway-gql
  template:
    metadata:
      labels:
        app: gateway-gql
    spec:
      volumes:
#        - name: logz
#          hostPath:
#            path: /var/log/clusterlogs/opc
#        - name: upstream-conf
#          configMap:
#            name: upstream-conf
        - name: gql-config
          configMap:
            name: gql-config
#        - name: tmp-dir
#          emptyDir:
#            medium: Memory
#            sizeLimit: 100Mi
      containers:
        - image: docker.io/danielostrovsky/gql-services:{{ .Values.gqlServices.imageTag }}
          name: gateway-gql
#          imagePullPolicy: Always
          volumeMounts:
            - name: gql-config
              mountPath: /usr/src/app/dist/apps/gql-config.json
              subPath: gql-config.json
          env:
            - name: discovery.type
              value: 'single-node'
            - name: SERVICE_NAME
              value: 'gateway-gql'
            - name: GRPC_CAST_URL
              value: 'cast-grpc-ms'
            - name: PORT
              value: {{ .Values.gqlServices.gateway.port  | quote }}
            - name: SUB_NODES
              valueFrom:
                configMapKeyRef:
                  # The ConfigMap containing the value you want to assign to SPECIAL_LEVEL_KEY
                  name: gateway-gql-services
                  # Specify the key associated with the value
                  key: castGql

          ports:
            - containerPort: {{ .Values.gqlServices.gateway.port }}

---
apiVersion: v1
kind: Service
metadata:
  name: gateway-gql
spec:
  ports:
    - port: {{ .Values.gqlServices.gateway.port }}
      targetPort: {{ .Values.gqlServices.gateway.port }}
  selector:
    app: gateway-gql

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: gateway-gql-services
data:
  castGql: 'cast'
  ui.properties: |
    color.good=purple
    color.bad=yellow
    allow.textmode=true
    how.nice.to.look=fairlyNice
